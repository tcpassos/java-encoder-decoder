package ui;

import encoder.FileEncoder;
import java.io.File;
import java.text.ParseException;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * Janela principal do programa de codificacao e decodificacao de arquivos
 */
public class FileEncoderWindow extends javax.swing.JFrame {

    private File file;
    private FileEncoder fileEncoder;

    public FileEncoderWindow() {
        initComponents();
        this.fileEncoder = new FileEncoder();
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jEncodingTypeField = new javax.swing.JComboBox<>();
        jDividerField = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jEncodeButton = new javax.swing.JButton();
        jFileChooser = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jFilePath = new javax.swing.JLabel();
        jDecodeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Codificador/Decodificador");

        jEncodingTypeField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Golomb" }));
        jEncodingTypeField.setEnabled(false);
        jEncodingTypeField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jEncodingTypeFieldPropertyChange(evt);
            }
        });

        jDividerField.setModel(new javax.swing.SpinnerNumberModel(2, 2, 512, 1));
        jDividerField.setEnabled(false);

        jLabel2.setText("Divisor");

        jEncodeButton.setText("Codificar");
        jEncodeButton.setEnabled(false);
        jEncodeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jEncodeButtonMousePressed(evt);
            }
        });

        jFileChooser.setText("Selecionar arquivo");
        jFileChooser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jFileChooserMousePressed(evt);
            }
        });

        jFilePath.setText("Nenhum arquivo selecionado");

        jDecodeButton.setText("Decodificar");
        jDecodeButton.setEnabled(false);
        jDecodeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jDecodeButtonMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jEncodeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jEncodingTypeField, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDividerField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFilePath))
                    .addComponent(jDecodeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(129, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFileChooser)
                    .addComponent(jFilePath))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEncodingTypeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDividerField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jEncodeButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDecodeButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jEncodingTypeField.getAccessibleContext().setAccessibleName("");
        jEncodingTypeField.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jFileChooserMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFileChooserMousePressed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileFilter(new FileNameExtensionFilter("Arquivos de texto", "txt", "enc", "dec"));
        if (chooser.showOpenDialog(FileEncoderWindow.this) == JFileChooser.APPROVE_OPTION) {
            file = chooser.getSelectedFile();
            jFilePath.setText(file.getAbsolutePath());
            jEncodeButton.setEnabled(true);
            jEncodingTypeField.setEnabled(true);
            _enableDisableDividerField();
            jDecodeButton.setEnabled(true);
        }
    }//GEN-LAST:event_jFileChooserMousePressed

    private void jEncodeButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jEncodeButtonMousePressed
        String output = "";
        switch ((String) jEncodingTypeField.getSelectedItem()) {
            case "Golomb":
                output = fileEncoder.encodeGolomb(file.getAbsolutePath(), _getDivider());
        }
        File outputFile = new File(output);
        JOptionPane.showMessageDialog(null, "O arquivo " + file.getName() + " passou de " + file.length() + " bytes para " + outputFile.length() + " bytes");
    }//GEN-LAST:event_jEncodeButtonMousePressed

    private void jDecodeButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDecodeButtonMousePressed
        fileEncoder.decode(file.getAbsolutePath());
        JOptionPane.showMessageDialog(null, "O arquivo " + file.getName() + " foi decodificado com sucesso!");
    }//GEN-LAST:event_jDecodeButtonMousePressed

    private void jEncodingTypeFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jEncodingTypeFieldPropertyChange
        _enableDisableDividerField();
    }//GEN-LAST:event_jEncodingTypeFieldPropertyChange

    private void _enableDisableDividerField() {
        boolean isEnabled = Objects.nonNull(file) && "Golomb".equals((String) jEncodingTypeField.getSelectedItem());
        jDividerField.setEnabled(isEnabled);
    }

    private int _getDivider() {
        try {
            jDividerField.commitEdit();
        } catch (ParseException ex) {
            Logger.getLogger(FileEncoderWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        return (int) jDividerField.getValue();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FileEncoderWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FileEncoderWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FileEncoderWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FileEncoderWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FileEncoderWindow().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jDecodeButton;
    private javax.swing.JSpinner jDividerField;
    private javax.swing.JButton jEncodeButton;
    private javax.swing.JComboBox<String> jEncodingTypeField;
    private javax.swing.JButton jFileChooser;
    private javax.swing.JLabel jFilePath;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables

}
